"use strict";function isIdBuilder(i){return e=>"string"===typeof e&&new RegExp(i.source,i.flags).test(e)}Object.defineProperty(exports,"__esModule",{value:!0});const isNumericId=isIdBuilder(/^[1-9][0-9]*$/),isEntityId=isIdBuilder(/^((Q|P|L|M)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)$/),isEntitySchemaId=isIdBuilder(/^E[1-9][0-9]*$/),isItemId=isIdBuilder(/^Q[1-9][0-9]*$/),isPropertyId=isIdBuilder(/^P[1-9][0-9]*$/),isLexemeId=isIdBuilder(/^L[1-9][0-9]*$/),isFormId=isIdBuilder(/^L[1-9][0-9]*-F[1-9][0-9]*$/),isSenseId=isIdBuilder(/^L[1-9][0-9]*-S[1-9][0-9]*$/),isMediaInfoId=isIdBuilder(/^M[1-9][0-9]*$/),isGuid=isIdBuilder(/^((Q|P|L|M)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)\$[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i),isHash=isIdBuilder(/^[0-9a-f]{40}$/),isRevisionId=isIdBuilder(/^\d+$/),isNonNestedEntityId=isIdBuilder(/^(Q|P|L|M)[1-9][0-9]*$/);function isPropertyClaimsId(i){if("string"!==typeof i)return!1;const[e,t]=i.split("#");return isEntityId(e)&&isPropertyId(t)}function isEntityPageTitle(i){return"string"===typeof i&&(i.startsWith("Item:")?isItemId(i.substring(5)):i.startsWith("Lexeme:")?isLexemeId(i.substring(7)):i.startsWith("Property:")?isPropertyId(i.substring(9)):isItemId(i))}function getNumericId(i){if(!isNonNestedEntityId(i))throw new Error(`invalid entity id: ${i}`);return i.replace(/^(Q|P|L|M)/,"")}function getImageUrl(i,e){let t=`https://commons.wikimedia.org/wiki/Special:FilePath/${i}`;return"number"===typeof e&&(t+=`?width=${e}`),t}function getEntityIdFromGuid(i){const e=i.split(/[$-]/);if(6===e.length)return e[0].toUpperCase();if(7===e.length)return e.slice(0,2).join("-").toUpperCase();throw new Error(`invalid guid: ${i}`)}var helpers=Object.freeze({__proto__:null,getEntityIdFromGuid:getEntityIdFromGuid,getImageUrl:getImageUrl,getNumericId:getNumericId,isEntityId:isEntityId,isEntityPageTitle:isEntityPageTitle,isEntitySchemaId:isEntitySchemaId,isFormId:isFormId,isGuid:isGuid,isHash:isHash,isItemId:isItemId,isLexemeId:isLexemeId,isMediaInfoId:isMediaInfoId,isNonNestedEntityId:isNonNestedEntityId,isNumericId:isNumericId,isPropertyClaimsId:isPropertyClaimsId,isPropertyId:isPropertyId,isRevisionId:isRevisionId,isSenseId:isSenseId});function forceArray(i){return"string"===typeof i?[i]:Array.isArray(i)?[...i]:[]}function isPlainObject(i){return Boolean(i)&&"object"===typeof i&&!Array.isArray(i)}const fixedEncodeURIComponent=i=>encodeURIComponent(i).replace(/[!'()*]/g,encodeCharacter),replaceSpaceByUnderscores=i=>i.replace(/\s/g,"_");function uniq(i){return Array.from(new Set(i))}const encodeCharacter=i=>"%"+i.charCodeAt(0).toString(16);function rejectObsoleteInterface(i){if(1!==i.length||!isPlainObject(i[0]))throw new Error("Since wikibase-sdk v9.0.0, this function expects arguments to be passed in an object\n    See https://github.com/maxlath/wikibase-sdk/blob/main/CHANGELOG.md")}function isOfType(i,e){return"string"===typeof e&&i.includes(e)}function isAKey(i,e){return Object.prototype.hasOwnProperty.call(i,e)}function typedEntries(i){return Object.entries(i)}function typedKeys(i){return Object.keys(i)}function wikibaseTimeToDateObject(i){"object"===typeof i&&(i=i.time);const e=i[0];let[t,s]=i.slice(1).split("T");t=t.replace(/-00/g,"-01");return fullDateData(e,`${t}T${s}`)}const fullDateData=(i,e)=>{const t=e.split("-")[0];return"-"===i||t.length>4?expandedYearDate(i,e,t):new Date(e)},expandedYearDate=(i,e,t)=>{let s;return s=4===t.length?`${i}00${e}`:5===t.length?`${i}0${e}`:i+e,new Date(s)},toEpochTime=i=>wikibaseTimeToDateObject(i).getTime(),toISOString=i=>wikibaseTimeToDateObject(i).toISOString(),toSimpleDay=i=>{if("object"===typeof i){const{time:e,precision:t}=i;i=9===t?e.replace("-01-01T","-00-00T"):10===t?e.replace("-01T","-00T"):e}return i.split("T")[0].replace(/^\+/,"").replace(/^(-?)0+/,"$1").replace(/-00$/,"").replace(/-00$/,"")},wikibaseTimeToEpochTime=toEpochTime,wikibaseTimeToISOString=i=>{try{return toISOString(i)}catch(e){const{sign:t,yearMonthDay:s,withinDay:o}=recoverDateAfterError(i);return`${t}${s}T${o}`}},wikibaseTimeToSimpleDay=i=>{try{return toSimpleDay(i)}catch(e){const{sign:t,yearMonthDay:s}=recoverDateAfterError(i);return`${t}${s}`}};function recoverDateAfterError(i){const e=(i="string"===typeof i?i:i.time)[0];let[t,s]=i.slice(1).split("T");if(!e||!t||!s)throw new Error("TimeInput is invalid: "+JSON.stringify(i));return t=t.replace(/-00/g,"-01"),{sign:e,yearMonthDay:t,withinDay:s}}var timeHelpers=Object.freeze({__proto__:null,wikibaseTimeToDateObject:wikibaseTimeToDateObject,wikibaseTimeToEpochTime:wikibaseTimeToEpochTime,wikibaseTimeToISOString:wikibaseTimeToISOString,wikibaseTimeToSimpleDay:wikibaseTimeToSimpleDay});function stringValue(i){return i.value}function monolingualtext(i,e){return e.keepRichValues?i.value:i.value.text}function entity(i,e){const{entityPrefix:t}=e,{value:s}=i;let o;if(s.id)o=s.id;else{o=`${entityLetter[s["entity-type"]]}${s["numeric-id"]}`}return"string"===typeof t?`${t}:${o}`:o}const entityLetter={item:"Q","entity-schema":"E",lexeme:"L",property:"P",form:"F",sense:"S"};function quantity(i,e){const{value:t}=i,s=parseFloat(t.amount);if(e.keepRichValues){const i={amount:parseFloat(t.amount),unit:t.unit.replace(/^https?:\/\/.*\/entity\//,"")};return null!=t.upperBound&&(i.upperBound=parseFloat(t.upperBound)),null!=t.lowerBound&&(i.lowerBound=parseFloat(t.lowerBound)),i}return s}function coordinate(i,e){return e.keepRichValues?i.value:[i.value.latitude,i.value.longitude]}function time(i,e){let t;if(t="function"===typeof e.timeConverter?e.timeConverter(i.value):getTimeConverter(e.timeConverter)(i.value),e.keepRichValues){const{timezone:e,before:s,after:o,precision:r,calendarmodel:n}=i.value;return{time:t,timezone:e,before:s,after:o,precision:r,calendarmodel:n}}return t}const timeConverters={iso:wikibaseTimeToISOString,epoch:wikibaseTimeToEpochTime,"simple-day":wikibaseTimeToSimpleDay,none:i=>"string"===typeof i?i:i.time};function getTimeConverter(i="iso"){const e=timeConverters[i];if(!e)throw new Error(`invalid converter key: ${JSON.stringify(i).substring(0,100)}`);return e}const parsers={commonsMedia:stringValue,"external-id":stringValue,"entity-schema":entity,"geo-shape":stringValue,"globe-coordinate":coordinate,math:stringValue,monolingualtext:monolingualtext,"musical-notation":stringValue,quantity:quantity,string:stringValue,"tabular-data":stringValue,time:time,url:stringValue,"wikibase-form":entity,"wikibase-item":entity,"wikibase-lexeme":entity,"wikibase-property":entity,"wikibase-sense":entity},legacyParsers={"musical notation":parsers["musical-notation"],globecoordinate:parsers["globe-coordinate"]};function parseSnak(i,e,t){let s;if(s=i?parsers[i]||legacyParsers[i]:parsers[e.type],!s)throw new Error(`${i} claim parser isn't implemented. Please report to https://github.com/maxlath/wikibase-sdk/issues`);return s(e,t)}function truthyPropertyClaims(i){const e={};for(const t of i){const{rank:i}=t;e[i]=e[i]||[],e[i].push(t)}return e.preferred||e.normal||[]}function nonDeprecatedPropertyClaims(i){return i.filter((i=>"deprecated"!==i.rank))}function truthyClaims(i){const e={};for(const[t,s]of typedEntries(i))e[t]=truthyPropertyClaims(s);return e}var rankHelpers=Object.freeze({__proto__:null,nonDeprecatedPropertyClaims:nonDeprecatedPropertyClaims,truthyClaims:truthyClaims,truthyPropertyClaims:truthyPropertyClaims});function simplifySnak(i,e={}){const{keepTypes:t,keepSnaktypes:s,keepHashes:o}=parseKeepOptions(e);let r;const{datatype:n,datavalue:k,snaktype:a,hash:w}=i;if(k)r=parseSnak(n,k,e);else if("somevalue"===a)r=e.somevalueValue;else{if("novalue"!==a)throw new Error("no datavalue or special snaktype found");r=e.novalueValue}if(t||s||o){const i={value:r};return t&&(i.type=n),s&&(i.snaktype=a),o&&(i.hash=w),i}return r}function simplifyClaim(i,e={}){const{keepQualifiers:t,keepReferences:s,keepIds:o,keepTypes:r,keepSnaktypes:n,keepRanks:k}=parseKeepOptions(e),{mainsnak:a,rank:w}=i,l=simplifySnak(a,e);if(!(t||s||o||r||n||k))return l;let u={value:l};return u=isPlainObject(l)&&"value"in l?l:{value:l},k&&(u.rank=w),t&&(u.qualifiers=simplifyQualifiers(i.qualifiers,e)),s&&(i.references=i.references||[],u.references=simplifyReferences(i.references,e)),o&&(u.id=i.id),u}function simplifyClaims(i,e={}){const{propertyPrefix:t}=e,s={};for(let[o,r]of typedEntries(i))t&&(o=t+":"+o),s[o]=simplifyPropertyClaims(r,e);return s}function simplifyPropertyClaims(i,e={}){if(null==i||0===i.length)return[];const{keepNonTruthy:t,keepNonDeprecated:s}=parseKeepOptions(e),{minTimePrecision:o}=e;s?i=nonDeprecatedPropertyClaims(i):t||(i=truthyPropertyClaims(i));const r=[];for(const n of i){if(!timeSnakPrecisionIsTooLow(n.mainsnak,o)){const i=simplifyClaim(n,e);void 0!==i&&r.push(i)}}return r[0]&&"object"!==typeof r[0]?uniq(r):r}function simplifySnaks(i={},e={}){const{propertyPrefix:t}=e,s={};for(let[o,r]of typedEntries(i))t&&(o=t+":"+o),s[o]=simplifyPropertySnaks(r,e);return s}function simplifyPropertySnaks(i,e={}){if(null==i||0===i.length)return[];const{minTimePrecision:t}=e,s=[];for(const o of i){if(!timeSnakPrecisionIsTooLow(o,t)){const i=simplifySnak(o,e);void 0!==i&&s.push(i)}}return s[0]&&"object"!==typeof s[0]?uniq(s):s}function simplifyQualifiers(i,e={}){return simplifySnaks(i,e)}function simplifyPropertyQualifiers(i,e={}){return simplifyPropertySnaks(i,e)}function simplifyQualifier(i,e={}){return simplifySnak(i,e)}function simplifyReferences(i,e={}){return i.map((i=>simplifyReference(i,e)))}function simplifyReference(i,e={}){const t=simplifySnaks(i.snaks,e);return e.keepHashes?{snaks:t,hash:i.hash}:t}const keepOptions=["keepQualifiers","keepReferences","keepIds","keepHashes","keepTypes","keepSnaktypes","keepRanks","keepRichValues"],parseKeepOptions=(i={})=>{if(i.keepAll)for(const e of keepOptions)null==i[e]&&(i[e]=!0);return i};function timeSnakPrecisionIsTooLow(i,e){if(null==e)return!1;if("time"!==i.datatype||"value"!==i.snaktype)return!1;const{value:t}=i.datavalue;return t.precision<e}function singleValue(i){const e={};for(const[t,s]of typedEntries(i))e[t]=null!=s?s.value:null;return e}function multiValue(i){const e={};for(const[t,s]of typedEntries(i))e[t]=null!=s?s.map((i=>i.value)):[];return e}function simplifyLabels(i){return singleValue(i)}function simplifyDescriptions(i){return singleValue(i)}function simplifyAliases(i){return multiValue(i)}function simplifyLemmas(i){return singleValue(i)}function simplifyRepresentations(i){return singleValue(i)}function simplifyGlosses(i){return singleValue(i)}const simplifyForm=(i,e={})=>{const{id:t,representations:s,grammaticalFeatures:o,claims:r}=i;if(!isFormId(t))throw new Error("invalid form object");return{id:t,representations:simplifyRepresentations(s),grammaticalFeatures:o,claims:simplifyClaims(r,e)}},simplifyForms=(i,e={})=>i.map((i=>simplifyForm(i,e))),simplifySense=(i,e={})=>{const{id:t,glosses:s,claims:o}=i;if(!isSenseId(t))throw new Error("invalid sense object");return{id:t,glosses:simplifyGlosses(s),claims:simplifyClaims(o,e)}};function simplifySenses(i,e={}){return i.map((i=>simplifySense(i,e)))}const specialSites={commonswiki:"commons",foundationwiki:"foundation",mediawikiwiki:"mediawiki",metawiki:"meta",outreachwiki:"outreach",sourceswiki:"sources",specieswiki:"species",wikidatawiki:"wikidata",wikifunctionswiki:"wikifunctions",wikimaniawiki:"wikimania"},sites=["aawiki","aawikibooks","aawiktionary","abwiki","abwiktionary","acewiki","adywiki","afwiki","afwikibooks","afwikiquote","afwiktionary","akwiki","akwikibooks","akwiktionary","alswiki","alswikibooks","alswikiquote","alswiktionary","altwiki","amiwiki","amwiki","amwikiquote","amwiktionary","angwiki","angwikibooks","angwikiquote","angwikisource","angwiktionary","anpwiki","anwiki","anwiktionary","arcwiki","arwiki","arwikibooks","arwikinews","arwikiquote","arwikisource","arwikiversity","arwiktionary","arywiki","arzwiki","astwiki","astwikibooks","astwikiquote","astwiktionary","aswiki","aswikibooks","aswikiquote","aswikisource","aswiktionary","atjwiki","avkwiki","avwiki","avwiktionary","awawiki","aywiki","aywikibooks","aywiktionary","azbwiki","azwiki","azwikibooks","azwikiquote","azwikisource","azwiktionary","banwiki","banwikisource","barwiki","bat_smgwiki","bawiki","bawikibooks","bbcwiki","bclwiki","bclwikiquote","bclwiktionary","bdrwiki","be_x_oldwiki","bewiki","bewikibooks","bewikiquote","bewikisource","bewiktionary","bewwiki","bgwiki","bgwikibooks","bgwikinews","bgwikiquote","bgwikisource","bgwiktionary","bhwiki","bhwiktionary","biwiki","biwikibooks","biwiktionary","bjnwiki","bjnwikiquote","bjnwiktionary","blkwiki","blkwiktionary","bmwiki","bmwikibooks","bmwikiquote","bmwiktionary","bnwiki","bnwikibooks","bnwikiquote","bnwikisource","bnwikivoyage","bnwiktionary","bowiki","bowikibooks","bowiktionary","bpywiki","brwiki","brwikiquote","brwikisource","brwiktionary","bswiki","bswikibooks","bswikinews","bswikiquote","bswikisource","bswiktionary","btmwiki","btmwiktionary","bugwiki","bxrwiki","cawiki","cawikibooks","cawikinews","cawikiquote","cawikisource","cawiktionary","cbk_zamwiki","cdowiki","cebwiki","cewiki","chowiki","chrwiki","chrwiktionary","chwiki","chwikibooks","chwiktionary","chywiki","ckbwiki","ckbwiktionary","commonswiki","cowiki","cowikibooks","cowikiquote","cowiktionary","crhwiki","crwiki","crwikiquote","crwiktionary","csbwiki","csbwiktionary","cswiki","cswikibooks","cswikinews","cswikiquote","cswikisource","cswikiversity","cswikivoyage","cswiktionary","cuwiki","cvwiki","cvwikibooks","cywiki","cywikibooks","cywikiquote","cywikisource","cywiktionary","dagwiki","dawiki","dawikibooks","dawikiquote","dawikisource","dawiktionary","dewiki","dewikibooks","dewikinews","dewikiquote","dewikisource","dewikiversity","dewikivoyage","dewiktionary","dgawiki","dinwiki","diqwiki","diqwiktionary","dsbwiki","dtpwiki","dtywiki","dvwiki","dvwiktionary","dzwiki","dzwiktionary","eewiki","elwiki","elwikibooks","elwikinews","elwikiquote","elwikisource","elwikiversity","elwikivoyage","elwiktionary","emlwiki","enwiki","enwikibooks","enwikinews","enwikiquote","enwikisource","enwikiversity","enwikivoyage","enwiktionary","eowiki","eowikibooks","eowikinews","eowikiquote","eowikisource","eowikivoyage","eowiktionary","eswiki","eswikibooks","eswikinews","eswikiquote","eswikisource","eswikiversity","eswikivoyage","eswiktionary","etwiki","etwikibooks","etwikiquote","etwikisource","etwiktionary","euwiki","euwikibooks","euwikiquote","euwikisource","euwiktionary","extwiki","fatwiki","fawiki","fawikibooks","fawikinews","fawikiquote","fawikisource","fawikivoyage","fawiktionary","ffwiki","fiu_vrowiki","fiwiki","fiwikibooks","fiwikinews","fiwikiquote","fiwikisource","fiwikiversity","fiwikivoyage","fiwiktionary","fjwiki","fjwiktionary","fonwiki","foundationwiki","fowiki","fowikisource","fowiktionary","frpwiki","frrwiki","frwiki","frwikibooks","frwikinews","frwikiquote","frwikisource","frwikiversity","frwikivoyage","frwiktionary","furwiki","fywiki","fywikibooks","fywiktionary","gagwiki","ganwiki","gawiki","gawikibooks","gawikiquote","gawiktionary","gcrwiki","gdwiki","gdwiktionary","glkwiki","glwiki","glwikibooks","glwikiquote","glwikisource","glwiktionary","gnwiki","gnwikibooks","gnwiktionary","gomwiki","gomwiktionary","gorwiki","gorwikiquote","gorwiktionary","gotwiki","gotwikibooks","gpewiki","gucwiki","gurwiki","guwiki","guwikibooks","guwikiquote","guwikisource","guwiktionary","guwwiki","guwwikinews","guwwikiquote","guwwiktionary","gvwiki","gvwiktionary","hakwiki","hawiki","hawiktionary","hawwiki","hewiki","hewikibooks","hewikinews","hewikiquote","hewikisource","hewikivoyage","hewiktionary","hifwiki","hifwiktionary","hiwiki","hiwikibooks","hiwikiquote","hiwikisource","hiwikiversity","hiwikivoyage","hiwiktionary","howiki","hrwiki","hrwikibooks","hrwikiquote","hrwikisource","hrwiktionary","hsbwiki","hsbwiktionary","htwiki","htwikisource","huwiki","huwikibooks","huwikinews","huwikiquote","huwikisource","huwiktionary","hywiki","hywikibooks","hywikiquote","hywikisource","hywiktionary","hywwiki","hzwiki","iawiki","iawikibooks","iawiktionary","idwiki","idwikibooks","idwikiquote","idwikisource","idwiktionary","iewiki","iewikibooks","iewiktionary","iglwiki","igwiki","igwikiquote","igwiktionary","iiwiki","ikwiki","ikwiktionary","ilowiki","inhwiki","iowiki","iowiktionary","iswiki","iswikibooks","iswikiquote","iswikisource","iswiktionary","itwiki","itwikibooks","itwikinews","itwikiquote","itwikisource","itwikiversity","itwikivoyage","itwiktionary","iuwiki","iuwiktionary","jamwiki","jawiki","jawikibooks","jawikinews","jawikiquote","jawikisource","jawikiversity","jawikivoyage","jawiktionary","jbowiki","jbowiktionary","jvwiki","jvwikisource","jvwiktionary","kaawiki","kaawiktionary","kabwiki","kawiki","kawikibooks","kawikiquote","kawikisource","kawiktionary","kbdwiki","kbdwiktionary","kbpwiki","kcgwiki","kcgwiktionary","kgewiki","kgwiki","kiwiki","kjwiki","kkwiki","kkwikibooks","kkwikiquote","kkwiktionary","klwiki","klwiktionary","kmwiki","kmwikibooks","kmwiktionary","knwiki","knwikibooks","knwikiquote","knwikisource","knwiktionary","koiwiki","kowiki","kowikibooks","kowikinews","kowikiquote","kowikisource","kowikiversity","kowiktionary","krcwiki","krwiki","krwikiquote","kshwiki","kswiki","kswikibooks","kswikiquote","kswiktionary","kuswiki","kuwiki","kuwikibooks","kuwikiquote","kuwiktionary","kvwiki","kwwiki","kwwikiquote","kwwiktionary","kywiki","kywikibooks","kywikiquote","kywiktionary","ladwiki","lawiki","lawikibooks","lawikiquote","lawikisource","lawiktionary","lbewiki","lbwiki","lbwikibooks","lbwikiquote","lbwiktionary","lezwiki","lfnwiki","lgwiki","lijwiki","lijwikisource","liwiki","liwikibooks","liwikinews","liwikiquote","liwikisource","liwiktionary","lldwiki","lmowiki","lmowiktionary","lnwiki","lnwikibooks","lnwiktionary","lowiki","lowiktionary","lrcwiki","ltgwiki","ltwiki","ltwikibooks","ltwikiquote","ltwikisource","ltwiktionary","lvwiki","lvwikibooks","lvwiktionary","madwiki","madwiktionary","maiwiki","map_bmswiki","mdfwiki","mediawikiwiki","metawiki","mgwiki","mgwikibooks","mgwiktionary","mhrwiki","mhwiki","mhwiktionary","minwiki","minwiktionary","miwiki","miwikibooks","miwiktionary","mkwiki","mkwikibooks","mkwikisource","mkwiktionary","mlwiki","mlwikibooks","mlwikiquote","mlwikisource","mlwiktionary","mniwiki","mniwiktionary","mnwiki","mnwikibooks","mnwiktionary","mnwwiki","mnwwiktionary","moswiki","mowiki","mowiktionary","mrjwiki","mrwiki","mrwikibooks","mrwikiquote","mrwikisource","mrwiktionary","mswiki","mswikibooks","mswikisource","mswiktionary","mtwiki","mtwiktionary","muswiki","mwlwiki","myvwiki","mywiki","mywikibooks","mywikisource","mywiktionary","mznwiki","nahwiki","nahwikibooks","nahwiktionary","napwiki","napwikisource","nawiki","nawikibooks","nawikiquote","nawiktionary","nds_nlwiki","ndswiki","ndswikibooks","ndswikiquote","ndswiktionary","newiki","newikibooks","newiktionary","newwiki","ngwiki","niawiki","niawiktionary","nlwiki","nlwikibooks","nlwikinews","nlwikiquote","nlwikisource","nlwikivoyage","nlwiktionary","nnwiki","nnwikiquote","nnwiktionary","novwiki","nowiki","nowikibooks","nowikinews","nowikiquote","nowikisource","nowiktionary","nqowiki","nrmwiki","nsowiki","nvwiki","nywiki","ocwiki","ocwikibooks","ocwiktionary","olowiki","omwiki","omwiktionary","orwiki","orwikisource","orwiktionary","oswiki","outreachwiki","pagwiki","pamwiki","papwiki","pawiki","pawikibooks","pawikisource","pawiktionary","pcdwiki","pcmwiki","pdcwiki","pflwiki","pihwiki","piwiki","piwiktionary","plwiki","plwikibooks","plwikinews","plwikiquote","plwikisource","plwikivoyage","plwiktionary","pmswiki","pmswikisource","pnbwiki","pnbwiktionary","pntwiki","pswiki","pswikibooks","pswikivoyage","pswiktionary","ptwiki","ptwikibooks","ptwikinews","ptwikiquote","ptwikisource","ptwikiversity","ptwikivoyage","ptwiktionary","pwnwiki","quwiki","quwikibooks","quwikiquote","quwiktionary","rmwiki","rmwikibooks","rmwiktionary","rmywiki","rnwiki","rnwiktionary","roa_rupwiki","roa_rupwiktionary","roa_tarawiki","rowiki","rowikibooks","rowikinews","rowikiquote","rowikisource","rowikivoyage","rowiktionary","ruewiki","ruwiki","ruwikibooks","ruwikinews","ruwikiquote","ruwikisource","ruwikiversity","ruwikivoyage","ruwiktionary","rwwiki","rwwiktionary","sahwiki","sahwikiquote","sahwikisource","satwiki","sawiki","sawikibooks","sawikiquote","sawikisource","sawiktionary","scnwiki","scnwiktionary","scowiki","scwiki","scwiktionary","sdwiki","sdwikinews","sdwiktionary","sewiki","sewikibooks","sgwiki","sgwiktionary","shiwiki","shnwiki","shnwikibooks","shnwikinews","shnwikivoyage","shnwiktionary","shwiki","shwiktionary","shywiktionary","simplewiki","simplewikibooks","simplewikiquote","simplewiktionary","siwiki","siwikibooks","siwiktionary","skrwiki","skrwiktionary","skwiki","skwikibooks","skwikiquote","skwikisource","skwiktionary","slwiki","slwikibooks","slwikiquote","slwikisource","slwikiversity","slwiktionary","smnwiki","smwiki","smwiktionary","snwiki","snwiktionary","sourceswiki","sowiki","sowiktionary","specieswiki","sqwiki","sqwikibooks","sqwikinews","sqwikiquote","sqwiktionary","srnwiki","srwiki","srwikibooks","srwikinews","srwikiquote","srwikisource","srwiktionary","sswiki","sswiktionary","stqwiki","stwiki","stwiktionary","suwiki","suwikibooks","suwikiquote","suwikisource","suwiktionary","svwiki","svwikibooks","svwikinews","svwikiquote","svwikisource","svwikiversity","svwikivoyage","svwiktionary","swwiki","swwikibooks","swwiktionary","szlwiki","szywiki","tawiki","tawikibooks","tawikinews","tawikiquote","tawikisource","tawiktionary","taywiki","tcywiki","tetwiki","tewiki","tewikibooks","tewikiquote","tewikisource","tewiktionary","tgwiki","tgwikibooks","tgwiktionary","thwiki","thwikibooks","thwikinews","thwikiquote","thwikisource","thwiktionary","tiwiki","tiwiktionary","tkwiki","tkwikibooks","tkwikiquote","tkwiktionary","tlwiki","tlwikibooks","tlwikiquote","tlwiktionary","tlywiki","tnwiki","tnwiktionary","towiki","towiktionary","tpiwiki","tpiwiktionary","trvwiki","trwiki","trwikibooks","trwikinews","trwikiquote","trwikisource","trwikivoyage","trwiktionary","tswiki","tswiktionary","ttwiki","ttwikibooks","ttwikiquote","ttwiktionary","tumwiki","twwiki","twwiktionary","tyvwiki","tywiki","udmwiki","ugwiki","ugwikibooks","ugwikiquote","ugwiktionary","ukwiki","ukwikibooks","ukwikinews","ukwikiquote","ukwikisource","ukwikivoyage","ukwiktionary","urwiki","urwikibooks","urwikiquote","urwiktionary","uzwiki","uzwikibooks","uzwikiquote","uzwiktionary","vecwiki","vecwikisource","vecwiktionary","vepwiki","vewiki","viwiki","viwikibooks","viwikiquote","viwikisource","viwikivoyage","viwiktionary","vlswiki","vowiki","vowikibooks","vowikiquote","vowiktionary","warwiki","wawiki","wawikibooks","wawikisource","wawiktionary","wikidatawiki","wikifunctionswiki","wikimaniawiki","wowiki","wowikiquote","wowiktionary","wuuwiki","xalwiki","xhwiki","xhwikibooks","xhwiktionary","xmfwiki","yiwiki","yiwikisource","yiwiktionary","yowiki","yowikibooks","yowiktionary","yuewiktionary","zawiki","zawikibooks","zawikiquote","zawiktionary","zeawiki","zghwiki","zh_classicalwiki","zh_min_nanwiki","zh_min_nanwikibooks","zh_min_nanwikiquote","zh_min_nanwikisource","zh_min_nanwiktionary","zh_yuewiki","zhwiki","zhwikibooks","zhwikinews","zhwikiquote","zhwikisource","zhwikiversity","zhwikivoyage","zhwiktionary","zuwiki","zuwikibooks","zuwiktionary"],wikidataBase="https://www.wikidata.org/wiki/";function getSitelinkUrl({site:i,title:e}){if(rejectObsoleteInterface(arguments),!i)throw new Error("missing a site");if(!e)throw new Error("missing a title");if(isAKey(siteUrlBuilders,i))return siteUrlBuilders[i](e);const t=i.replace(/wiki$/,"");if(isAKey(siteUrlBuilders,t))return siteUrlBuilders[t](e);const{lang:s,project:o}=getSitelinkData(i);return`https://${s}.${o}.org/wiki/${e=fixedEncodeURIComponent(replaceSpaceByUnderscores(e))}`}const wikimediaSite=i=>e=>`https://${i}.wikimedia.org/wiki/${e}`,siteUrlBuilders={commons:wikimediaSite("commons"),foundation:wikimediaSite("foundation"),mediawiki:i=>`https://www.mediawiki.org/wiki/${i}`,meta:wikimediaSite("meta"),outreach:wikimediaSite("outreach"),sources:i=>`https://wikisource.org/wiki/${i}`,species:wikimediaSite("species"),wikidata:i=>{const e=prefixByEntityLetter[i[0]];let t=e?`${e}:${i}`:i;return t=t.replace("-","#"),`${wikidataBase}${t}`},wikifunctions:wikimediaSite("wikifunctions"),wikimania:wikimediaSite("wikimania")},prefixByEntityLetter={E:"EntitySchema",L:"Lexeme",P:"Property"},sitelinkUrlPattern=/^https?:\/\/([\w-]{2,10})\.(\w+)\.org\/\w+\/(.*)/;function getSitelinkData(i){if(i.startsWith("http")){const e=i,t=e.match(sitelinkUrlPattern);if(!t)throw new Error(`invalid sitelink url: ${e}`);let[s,o,r]=t.slice(1);if(r=decodeURIComponent(r),"commons"===s)return{lang:"en",project:"commons",key:"commons",title:r,url:e};if(!isOfType(projectNames,o))throw new Error(`project is unknown: ${o}`);if("www"===s)return{lang:"en",project:o,key:o,title:r,url:e};const n=s.replace(/-/g,"_");return{lang:s,project:o,key:`${n}${o}`.replace("wikipedia","wiki"),title:r,url:e}}{if(isAKey(specialSites,i)){return{lang:"en",project:specialSites[i],key:i}}if(!isOfType(sites,i))throw new Error(`site not found: ${i}. Updating wikibase-sdk to a more recent version might fix the issue.`);let[e,t,s]=i.split("wik");if(null!=s)throw new Error(`invalid sitelink key: ${i}`);e=e.replace(/_/g,"-");const o=projectsBySuffix[t];if(!o)throw new Error(`sitelink project not found: ${o}`);return{lang:e,project:o,key:i}}}const isSite=i=>isOfType(sites,i),isSitelinkKey=isSite,projectsBySuffix={i:"wikipedia",isource:"wikisource",iquote:"wikiquote",tionary:"wiktionary",ibooks:"wikibooks",iversity:"wikiversity",ivoyage:"wikivoyage",inews:"wikinews"},projectNames=[...Object.values(projectsBySuffix),...Object.values(specialSites)];var sitelinksHelpers=Object.freeze({__proto__:null,getSitelinkData:getSitelinkData,getSitelinkUrl:getSitelinkUrl,isSite:isSite,isSitelinkKey:isSitelinkKey});function simplifySitelinks(i,e={}){let{addUrl:t,keepBadges:s,keepAll:o}=e;return s=s||o,typedKeys(i).reduce(aggregateValues({sitelinks:i,addUrl:t,keepBadges:s}),{})}const aggregateValues=({sitelinks:i,addUrl:e,keepBadges:t})=>(s,o)=>{if(null==i[o])return s[o]=i[o],s;const{title:r,badges:n}=i[o];return e||t?(s[o]={title:r},e&&(s[o].url=getSitelinkUrl({site:o,title:r})),t&&(s[o].badges=n)):s[o]=r,s},simplify$1={labels:simplifyLabels,descriptions:simplifyDescriptions,aliases:simplifyAliases,claims:simplifyClaims,statements:simplifyClaims,sitelinks:simplifySitelinks,lemmas:simplifyLemmas,forms:simplifyForms,senses:simplifySenses},simplifyEntity=(i,e={})=>{const{type:t}=i;if(!t)throw new Error("missing entity type");const s={id:i.id,type:t,modified:i.modified};return"item"===t?(simplifyIfDefined(i,s,"labels"),simplifyIfDefined(i,s,"descriptions"),simplifyIfDefined(i,s,"aliases"),simplifyIfDefined(i,s,"claims",e),simplifyIfDefined(i,s,"sitelinks",e)):"property"===t?(s.datatype=i.datatype,simplifyIfDefined(i,s,"labels"),simplifyIfDefined(i,s,"descriptions"),simplifyIfDefined(i,s,"aliases"),simplifyIfDefined(i,s,"claims",e)):"lexeme"===t?(simplifyIfDefined(i,s,"lemmas"),s.lexicalCategory=i.lexicalCategory,s.language=i.language,simplifyIfDefined(i,s,"claims",e),simplifyIfDefined(i,s,"forms",e),simplifyIfDefined(i,s,"senses",e)):"mediainfo"===t&&(simplifyIfDefined(i,s,"labels"),simplifyIfDefined(i,s,"descriptions"),simplifyIfDefined(i,s,"statements",e)),s},simplifyIfDefined=(i,e,t,s)=>{null!=i[t]&&(e[t]=simplify$1[t](i[t],s))},simplifyEntities=(i,e={})=>{i.entities&&(i=i.entities);const{entityPrefix:t}=e,s={};for(const[o,r]of Object.entries(i)){s[t?`${t}:${o}`:o]=simplifyEntity(r,e)}return s};function entities(i){i=i.body||i;const{entities:e}=i;return simplifyEntities(e)}function pagesTitles(i){return(i=i.body||i).query.search.map((i=>i.title))}var parse=Object.freeze({__proto__:null,entities:entities,pagesTitles:pagesTitles});function simplifySparqlResults(i){"string"===typeof i&&(i=JSON.parse(i));const{vars:e}=i.head,t=i.results.bindings,{richVars:s,associatedVars:o,standaloneVars:r}=identifyVars(e);return t.map((i=>getSimplifiedResult(s,o,r,i)))}function parseValue(i){if(!i||"bnode"===i.type)return null;const{value:e}=i;if("uri"===i.type)return parseUri(e);const t=(i.datatype||"").replace("http://www.w3.org/2001/XMLSchema#","");return"decimal"===t||"integer"===t||"float"===t||"double"===t?parseFloat(e):"boolean"===t?"true"===e:e}function parseUri(i){return i.match(/http.*\/entity\/statement\//)?convertStatementUriToGuid(i):i.replace(/^https?:\/\/.*\/entity\//,"").replace(/^https?:\/\/.*\/prop\/direct\//,"")}function convertStatementUriToGuid(i){const e=(i=i.replace(/^https?:\/\/.*\/entity\/statement\//,"")).split("-");return e[0]+"$"+e.slice(1).join("-")}function identifyVars(i){let e=i.filter((e=>{const t=new RegExp(`^${e}[A-Z]\\w+`);return i.some((i=>t.test(i)))}));e=e.filter((i=>!e.some((e=>i!==e&&i.startsWith(e)))));const t=new RegExp(`^(${e.join("|")})[A-Z]`),s=i.filter((i=>t.test(i))),o=i.filter((i=>!e.includes(i)&&!t.test(i)));return{richVars:e,associatedVars:s,standaloneVars:o}}function getSimplifiedResult(i,e,t,s){const o={};for(const r of i){const i={},t=parseValue(s[r]);null!=t&&(i.value=t);for(const o of e)o.startsWith(r)&&addAssociatedValue(s,r,o,i);Object.keys(i).length>0&&(o[r]=i)}for(const r of t){const i=parseValue(s[r]);null!=i&&(o[r]=i)}return o}function addAssociatedValue(i,e,t,s){let o=t.split(e)[1];o=o[0].toLowerCase()+o.slice(1),o="altLabel"===o?"aliases":o;const r=i[t];null!=r&&(s[o]=r.value)}var simplify=Object.freeze({__proto__:null,aliases:simplifyAliases,claim:simplifyClaim,claims:simplifyClaims,descriptions:simplifyDescriptions,entities:simplifyEntities,entity:simplifyEntity,form:simplifyForm,forms:simplifyForms,glosses:simplifyGlosses,labels:simplifyLabels,lemmas:simplifyLemmas,propertyClaims:simplifyPropertyClaims,propertyQualifiers:simplifyPropertyQualifiers,qualifier:simplifyQualifier,qualifiers:simplifyQualifiers,reference:simplifyReference,references:simplifyReferences,representations:simplifyRepresentations,sense:simplifySense,senses:simplifySenses,sitelinks:simplifySitelinks,snak:simplifySnak,sparqlResults:simplifySparqlResults});const namespacePattern=/^\d+[|\d]*$/;function cirrusSearchPagesFactory(i){return function(e){rejectObsoleteInterface(arguments);for(const[i,y]of Object.entries(e))if(i.startsWith("sr")){const t=i.replace(/^sr/,"");if(null!=e[t])throw new Error(`${t} and ${i} are the same`);e[t]=y}const{search:t,haswbstatement:s,format:o="json",limit:r,offset:n,profile:k,sort:a}=e;let{namespace:w,prop:l}=e;if(!t&&!s)throw new Error('missing "search" or "haswbstatement" parameter');let u,c="";if(t&&(c+=t),s){const i=s instanceof Array?s:[s];for(const e of i)"-"===e[0]?c+=` -haswbstatement:${e.slice(1)}`:c+=` haswbstatement:${e}`}if(null!=r&&("number"!==typeof r||r<1))throw new Error(`invalid limit: ${r}`);if(null!=n&&("number"!==typeof n||n<0))throw new Error(`invalid offset: ${n}`);if(w instanceof Array?w=w.join("|"):"number"===typeof w&&(w=w.toString()),w&&!namespacePattern.test(w))throw new Error(`invalid namespace: ${w}`);if(null!=k&&"string"!==typeof k)throw new Error(`invalid profile: ${k} (${typeof k}, expected string)`);if(null!=a&&"string"!==typeof a)throw new Error(`invalid sort: ${a} (${typeof a}, expected string)`);if(null!=l){if(l instanceof Array&&(l=l.join("|")),"string"!==typeof l)throw new Error(`invalid prop: ${l} (${typeof l}, expected string)`);u=l.toString()}return i({action:"query",list:"search",srsearch:c.trim(),format:o,srnamespace:w,srlimit:r,sroffset:n,srqiprofile:k,srsort:a,srprop:u})}}function validate(i,e){return function(t){if(!e(t))throw new Error(`invalid ${i}: ${t} (type: ${typeOf(t)})`)}}const entityId=validate("entity id",isEntityId),propertyId=validate("property id",isPropertyId),entityPageTitle=validate("entity page title",isEntityPageTitle),revisionId=validate("revision id",isRevisionId);function typeOf(i){const e=typeof i;if("object"===e){if(null===i)return"null";if(i instanceof Array)return"array";if(i instanceof Promise)return"promise"}return"number"===e&&Number.isNaN(i)?"NaN":e}function getEntitiesFactory(i){return function({ids:e,languages:t,props:s,format:o="json",redirects:r}){if(rejectObsoleteInterface(arguments),!(e&&e.length>0))throw new Error("no id provided");(e=forceArray(e)).forEach((i=>entityId(i))),e.length>50&&console.warn("getEntities accepts 50 ids max to match Wikidata API limitations:\n      this request won't get all the desired entities.\n      You can use getManyEntities instead to generate several request urls\n      to work around this limitation");const n={action:"wbgetentities",ids:e.join("|"),format:o};return!1===r&&(n.redirects="no"),t&&(t=forceArray(t),n.languages=t.join("|")),s&&s.length>0&&(n.props=forceArray(s).join("|")),i(n)}}function getEntitiesFromSitelinksFactory(i){return function({titles:e,sites:t,languages:s,props:o,format:r="json",redirects:n}){if(rejectObsoleteInterface(arguments),!(e&&e.length>0))throw new Error("no titles provided");t&&t.length>0||(t=["enwiki"]),e=forceArray(e),t=forceArray(t).map(parseSite),o=forceArray(o);const k={action:"wbgetentities",titles:e.join("|"),sites:t.join("|"),format:r};return 1===t.length&&1===e.length&&(k.normalize=!0),s&&(s=forceArray(s),k.languages=s.join("|")),o.length>0&&(k.props=o.join("|")),!1===n&&(k.redirects="no"),i(k)}}function parseSite(i){if(isOfType(sites,i))return i;return i.replace(/-/g,"_")+"wiki"}function getEntityRevisionFactory(i,e){return function({id:t,revision:s}){return rejectObsoleteInterface(arguments),entityId(t),revisionId(s),`${i}/${e}/index.php?title=Special:EntityData/${t}.json&revision=${s}`}}function getManyEntitiesFactory(i){const e=getEntitiesFactory(i);return function({ids:i,languages:t,props:s,format:o,redirects:r}){if(rejectObsoleteInterface(arguments),!(i instanceof Array))throw new Error("getManyEntities expects an array of ids");return getChunks(i).map((i=>e({ids:i,languages:t,props:s,format:o,redirects:r})))}}function getChunks(i){const e=[];for(;i.length>0;){const t=i.slice(0,50);i=i.slice(50),e.push(t)}return e}function sparqlQueryFactory(i){return function(e){const t=fixedEncodeURIComponent(e);return`${i}?format=json&query=${t}`}}const itemsOnly="FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } ",getReverseClaimsFactory=i=>{const e=sparqlQueryFactory(i);return function(i){let{properties:t}=i;const{values:s,limit:o,caseInsensitive:r,keepProperties:n}=i,k=r?caseInsensitiveValueQuery:directValueQuery,a=n?"":itemsOnly;t=forceArray(t),t.forEach((i=>propertyId(i)));let w=`SELECT DISTINCT ?subject WHERE { ${getValueBlock(s,k,t,a)} }`;return o&&(w+=` LIMIT ${o}`),e(w)}},getValueBlock=(i,e,t,s)=>{if(t=t.map(prefixifyProperty).join("|"),!(i instanceof Array))return e(t,getValueString(i),s);return"{ "+i.map(getValueString).map((i=>e(t,i,s))).join("} UNION {")+" }"},getValueString=i=>(isItemId(i)?i=`wd:${i}`:"string"===typeof i&&(i=`'${i}'`),i),directValueQuery=(i,e,t)=>`?subject ${i} ${e} .\n    ${t}`,caseInsensitiveValueQuery=(i,e,t)=>`?subject ${i} ?value .\n    FILTER (lcase(?value) = ${e.toLowerCase()})\n    ${t}`,prefixifyProperty=i=>"wdt:"+i;function getRevisionsFactory(i){return function({ids:e,format:t,limit:s,start:o,end:r,prop:n,user:k,excludeuser:a,tag:w}){rejectObsoleteInterface(arguments),(e=forceArray(e)).forEach((i=>entityPageTitle(i)));const l=1===e.length,u={action:"query",prop:"revisions"};return u.titles=e.join("|"),u.format=t||"json",l&&(u.rvlimit=s||"max"),l&&o&&(u.rvstart=getEpochSeconds(o)),l&&r&&(u.rvend=getEpochSeconds(r)),u.rvprop=n?forceArray(n).join("|"):"ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores",u.rvslots="*",k&&(u.rvuser=k),a&&(u.rvexcludeuser=a),w&&(u.rvtag=w),i(u)}}const getEpochSeconds=i=>"number"===typeof i&&i<earliestPointInMs?i:Math.trunc(new Date(i).getTime()/1e3),earliestPointInMs=new Date("2000-01-01").getTime(),EntityTypes=["item","property","lexeme","form","sense","entity-schema"],searchEntitiesFactory=i=>function({search:e,language:t="en",uselang:s,limit:o="20",continue:r="0",format:n="json",type:k="item"}){if(rejectObsoleteInterface(arguments),s=s||t,!(e&&e.length>0))throw new Error("search can't be empty");if(!isOfType(EntityTypes,k))throw new Error(`invalid type: ${k}`);return i({action:"wbsearchentities",search:e,language:t,limit:o,continue:r,format:n,uselang:s,type:k})},isBrowser="undefined"!==typeof location&&"undefined"!==typeof document;function buildUrlFactory(i){return e=>{isBrowser&&(e=Object.assign(Object.assign({},e),{origin:"*"}));const t=Object.entries(e).filter((([,i])=>null!=i)).map((([i,e])=>[i,String(e)])),s=new URLSearchParams(t).toString();return i+"?"+s}}const tip="Tip: if you just want to access functions that don't need an instance or a sparqlEndpoint,\nthose are also exposed directly on the module object. Exemple:\nimport { isItemId, simplify } from 'wikibase-sdk'",common=Object.assign(Object.assign(Object.assign(Object.assign({simplify:simplify,parse:parse},helpers),sitelinksHelpers),rankHelpers),timeHelpers);function WBK(i){if(!isPlainObject(i))throw new Error("invalid config");const{instance:e,sparqlEndpoint:t}=i;let s,o,r,n,{wgScriptPath:k="w"}=i;if(k=k.replace(/^\//,""),!e&&!t)throw new Error(`one of instance or sparqlEndpoint should be set at initialization.\n${tip}`);if(e){validateEndpoint("instance",e),o=e.replace(/\/$/,"").replace(`/${k}/api.php`,""),r=`${o}/${k}/api.php`;const i=buildUrlFactory(r);s={searchEntities:searchEntitiesFactory(i),cirrusSearchPages:cirrusSearchPagesFactory(i),getEntities:getEntitiesFactory(i),getManyEntities:getManyEntitiesFactory(i),getRevisions:getRevisionsFactory(i),getEntityRevision:getEntityRevisionFactory(e,k),getEntitiesFromSitelinks:getEntitiesFromSitelinksFactory(i)}}else s={searchEntities:missingInstance("searchEntities"),cirrusSearchPages:missingInstance("cirrusSearchPages"),getEntities:missingInstance("getEntities"),getManyEntities:missingInstance("getManyEntities"),getRevisions:missingInstance("getRevisions"),getEntityRevision:missingInstance("getEntityRevision"),getEntitiesFromSitelinks:missingInstance("getEntitiesFromSitelinks")};return t?(validateEndpoint("sparqlEndpoint",t),n={sparqlQuery:sparqlQueryFactory(t),getReverseClaims:getReverseClaimsFactory(t)}):n={sparqlQuery:missingSparqlEndpoint("sparqlQuery"),getReverseClaims:missingSparqlEndpoint("getReverseClaims")},Object.assign(Object.assign(Object.assign({instance:{root:o,apiEndpoint:r}},common),s),n)}const validateEndpoint=(i,e)=>{if("string"!==typeof e||!e.startsWith("http"))throw new Error(`invalid ${i}: ${e}`)},missingConfig=i=>e=>()=>{throw new Error(`${e} requires ${i} to be set at initialization`)},missingSparqlEndpoint=missingConfig("a sparqlEndpoint"),missingInstance=missingConfig("an instance"),wdk=WBK({instance:"https://www.wikidata.org",sparqlEndpoint:"https://query.wikidata.org/sparql"});exports.default=wdk,exports.wdk=wdk;